plugins {
    id "com.android.application"
    id "kotlin-android"
}

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--always'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

static def versionCodeEpoch() {
    return (new Date().getTime() / 1000).toInteger()
}

android {
    compileSdk 34
    namespace "org.torproject.android"


    defaultConfig {
        applicationId "org.torproject.android"
        versionName getVersionName()
        minSdk 23
        targetSdk 34
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        archivesBaseName = "Orbot"
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
        }
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    flavorDimensions "free"

    productFlavors {
        fullperm {
            dimension "free"
            applicationId 'org.torproject.android'
            versionCode 1711300100
            versionName getVersionName()
            archivesBaseName = "Orbot-${versionName}"
        }

        nightly {
            dimension "free"
            applicationId 'org.torproject.android.nightly'
            versionName getVersionName()
            versionCode versionCodeEpoch()
            archivesBaseName = "Orbot-${versionName}"
        }
    }

    splits {
        abi {
            universalApk true
        }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/androidx.localbroadcastmanager_localbroadcastmanager.version']
        }
    }

    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'InvalidPackage'
        htmlReport true
        lintConfig file('../lint.xml')
        textReport false
        xmlReport false
    }
}

dependencies {
    // Local
    implementation project(':OrbotLib')
    implementation project(':appcore')
    implementation project(':intentintegrator')
    implementation project(':orbotservice')

    // Core
    implementation libs.android.material
    implementation libs.android.volley
    implementation libs.androidx.core.ktx
    implementation libs.androidx.localbroadcast

    // Navigation
    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui

    // Squareup
    implementation libs.squareup.retrofit
    implementation libs.squareup.gson

    // Root detection
    implementation libs.scottyab.rootbeer

    // Testing
    implementation libs.androidx.core.ktx
    implementation libs.kotlin.stdlib.jdk8
    testImplementation libs.junit.junit
    androidTestImplementation libs.androidx.test.espresso
    androidTestImplementation libs.androidx.test.junit
    androidTestImplementation libs.fastlane.screengrab
}
